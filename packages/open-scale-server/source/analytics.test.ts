import { assertEquals } from 'jsr:@std/assert';

import {
    RecordEvent,
} from './data.ts';

import {
    extractCurrentEvents,
    composeAnalytics,
} from './analytics.ts';



const events: RecordEvent[] = [
    [1730123288213, 0.2, 1.33, 25000, 25916.73, 0.95, 0.01, 2000, 50, 20],
    [1730123298213, 0.2, 1.33, 25000, 25916.73, 0.95, 0.01, 2000, 50, 20],
    [1730151897213, 0.27, 2.16, 25000, 25822.25, 0.95, 0.01, 2000, 50, 20],
    [1730243930213, 0.18, 1.64, 25000, 23211.14, 0.95, 0.01, 2000, 50, 20],
    [1730354918213, 0.11, 0.91, 25000, 23264.73, 0.95, 0.01, 2000, 50, 20],
    [1730612992213, 0.33, 1.63, 25000, 24678.59, 0.95, 0.01, 2000, 50, 20],
    [1730927328213, 0.23, 1.49, 25000, 24595.76, 0.95, 0.01, 2000, 50, 20],
    [1731731538213, 0.44, 2.18, 25000, 24869.62, 0.95, 0.01, 2000, 50, 20],
    [1731800742213, 0.32, 1.51, 25000, 23821.24, 0.95, 0.01, 2000, 50, 20],
    [1732107629213, 0.19, 1.06, 25000, 22449.2, 0.95, 0.01, 2000, 50, 20],
    [1732308507213, 0.38, 1.67, 25000, 24622.8, 0.95, 0.01, 2000, 50, 20],
    [1732509637213, 0.14, 0.74, 25000, 24807.85, 0.95, 0.01, 2000, 50, 20],
    [1732970276213, 0.31, 1.38, 25000, 23825.59, 0.95, 0.01, 2000, 50, 20],
    [1733115050213, 0.49, 2.32, 25000, 24323.18, 0.95, 0.01, 2000, 50, 20],
    [1733849488213, 0.42, 2.23, 25000, 24245.9, 0.95, 0.01, 2000, 50, 20],
    [1733934682213, 0.08, 0.64, 25000, 23476.03, 0.95, 0.01, 2000, 50, 20],
    [1734328127213, 0.21, 1.78, 25000, 26065.95, 0.95, 0.01, 2000, 50, 20],
    [1734734580213, 0.49, 2.41, 25000, 23568.96, 0.95, 0.01, 2000, 50, 20],
    [1734880913213, 0.18, 1.09, 25000, 26094.07, 0.95, 0.01, 2000, 50, 20],
    [1734882862213, 0.39, 1.78, 25000, 25891.56, 0.95, 0.01, 2000, 50, 20],
    [1734905345213, 0.08, 0.91, 25000, 22787.53, 0.95, 0.01, 2000, 50, 20]
];


Deno.test('composeAnalytics', () => {
    const [currentEvents, _] = extractCurrentEvents(events);
    const analytics = composeAnalytics(currentEvents, {});

    // Deno.writeFileSync(
    //     './test.md',
    //     new TextEncoder().encode(JSON.stringify(analytics, null, 4)),
    // );

    assertEquals(analytics['2024']['9']['28']['15'].measurements['25000'], 2);
    assertEquals(analytics['2024']['9']['28']['23'].measurements['25000'], 1);
    assertEquals(analytics['2024']['9']['30']['1'].measurements['25000'], 1);
    assertEquals(analytics['2024']['9']['31']['8'].measurements['25000'], 1);
});
